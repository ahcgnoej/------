배열과 반복문

---
배열
-> 여러 자료를 묶어서 활용할 수 있는 특수한 자료 [요소,요소,요소,요소,...]

-> 배열 요소에 접근
  > 배열[인덱스]
   > const num =[1,2,3]; num[1]; //2

-> 배열 요소 개수 확인
  > 배열.length
    > const fruits = ['배','사과','키위','바나나']; fruits.length; fruits[fruits.length - 1] //4 '바나나'

-> 배열 뒷부분에 요소 추가
  > 배열.push(요소)
    > const todos = [1,2,3,4,5]; todos.push(6); //[1,2,3,4,5,6]

-> 배열 요소 제거
  > 배열.splice(인덱스,제거할 요소의 개수)
    > const itemsA = ['사과','배','바나나']; itemsA.splice(2,1); itemsA //['사과','배']
  > const 인덱스 = 배열.indexOf(요소); 
    > const itemsB = ['사과','배','바나나']; const index = itemsB.indexOf('바나나'); itemsB.splice(index,1); itemsB; //['사과','배']

-> 배열의 특정 위치에 요소 추가
  > 배열.splice(인덱스,0,요소)
    > cosnt num = [1,2,3,4,5]; num.splice(0,0,0); num; //[0,1,2,3,4,5] 

---
반복문

for 반복문
-> for in 반복문
  for (const 반복 변수 in 배열 또는 객체) {
    문장
  }
  > 배열 요소를 하나하나 꺼내서 특정 문장을 실행할 때 사용 
  const todos = ['우유 구매','업무 메일 확인','필라테스 수업']
  for (const i in todos){
    console.log(`${i}번째 할 일 : ${todos[i]}`)
  }

-> for of 반복문
  for (const 반복 변수 of 배열 또는 객체) {
    문장
  }
  > for in 반복문과 다르게 반복 변수에 요소의 값이 들어감. for in 에서는 반복 변수에 인덱스가 들어가 있었음!
  > 요소의 값을 반복할 때 안정적으로 사용 
  const todos = ['우유 구매','업무 메일 확인','필라테스 수업']
  for (const todo of todos){
    console.log(`오늘의 할 일 : ${todo}`)
  }

-> for 반복문 
  > 특정 횟수만큼 반복하고 싶을 때 사용하는 범용적인 반복문 
  for (let i = 0; i<반복 횟수; i++) {
    문장
  }

while 반복문
-> 불 표현식이 true면 계속해서 문장을 실행
-> 조건이 변하지 않는다면 무한루프에 빠지게 되므로 조건을 거짓으로 만드는 내용이 문장에 포함되어야 함 
  while (불 표현식){
    문장
  }
-> continue 키워드
  > continue 키워드는 반복문 안의 반복 작업을 멈추고 반복문의 처음으로 돌아가 다음 반복 작업을 진행
  let output = 0; 
  for (let i = 1; i<=10; i++){
    if(i%2===1){
      continue
    }
    output+=i
  } //홀수면 현재 반복을 중지하고 다음 반복 수행 // 30 출력